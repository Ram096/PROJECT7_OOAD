// Delivery Class
/*
This Delivery class is responsible for managing the delivery of pizzas to customers. Here are some comments on the code:
    - The Delivery class implements the SysOut interface, which means it must provide an implementation for the out method.
    - The Delivery class has a location variable that represents the delivery location, a customer variable that represents the customer ordering the pizza, a deliveryTime variable that represents the expected time for delivery, and a namer variable that generates random addresses from a list of pre-defined addresses.
    - The Delivery class has a constructor that initializes the customer and address variables. However, the address variable is a static variable that is already initialized in the class definition, so there's no need to initialize it again in the constructor.
    - The deliver method takes a Customer object as an argument and sets the deliveryTime and location variables using random values generated by the Utility class and the namer object, respectively. It then prints out the delivery information using the out method.
 */

import java.util.Arrays;
import java.util.List;


public class Delivery implements SysOut{
    String location;
    private Customer customer;
    static List<String> address = Arrays.asList("123 Main St, Boulder, CO 80302",    "456 Pearl St, Boulder, CO 80301",    "789 Walnut St, Boulder, CO 80302",    "1011 Canyon Blvd, Boulder, CO 80302",    "1213 Spruce St, Boulder, CO 80302");
    static int deliveryTime;
    static Namer namer = new Namer(address);

    public Delivery() {
        this.customer = customer;
        this.address = address;
    }

    public void deliver(Customer c) {

        deliveryTime = Utility.rndFromRange(20, 50);
        location = namer.getNext();

        out("Customer " + c.name + " wants delivery, so we are delivering the pizza to " + c.name + " at " + location);
        out("Expected wait time " + deliveryTime + " mins");
        out("Pizza delivered successfully.");
    }


}

